/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package siddhinathese;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Siddhinath
 */
public class book extends javax.swing.JFrame {

    /**
     * Creates new form book
     */
    public book() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtab = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 202));

        jButton1.setText("ADD");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("SEARCH");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("UPDATE");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("DELETE");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("BOOK ID");

        jLabel2.setText("     BOOK NAME");

        jLabel3.setText("     DOMAIN");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jtab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BOOK ID", "BOOK NAME", "DOMAIN"
            }
        ));
        jScrollPane2.setViewportView(jtab);

        jButton5.setText("show all records");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("delete all records");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("see history");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addGap(57, 57, 57)
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addGap(18, 18, 18)
                                .addComponent(jButton6)
                                .addGap(18, 18, 18)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel2))
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3))
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton2)
                        .addComponent(jButton1))
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // ADD A BOOK TO THE TABLE
      String bookId = jTextField1.getText();
      String name   = jTextField2.getText();
      String domain = jTextField3.getText();
     
 
     
      
        try {
            //insert into books
            Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sid","sid","sid");
            PreparedStatement ps = con.prepareStatement("INSERT INTO BOOKS (BOOKID,BOOKNAME,DOMAIN) values  (?,?,?)");
            ps.setString(1,bookId);
            ps.setString(2,name);
            ps.setString(3,domain);
            ps.executeUpdate();
            
            
            //insert into history
            Connection con1 = DriverManager.getConnection("jdbc:derby://localhost:1527/sid","sid","sid");
            PreparedStatement ps1 = con1.prepareStatement("INSERT INTO HISTORY (OPERATION,BOOKID,BOOKNAME,DOMAIN) values  (?,?,?,?)");
            ps1.setString(1,"ADDED");
            ps1.setString(2,bookId);
            ps1.setString(3,name);
            ps1.setString(4,domain);
            ps1.executeUpdate();
            
            con1.close();
           
            JOptionPane.showMessageDialog(null, "Book Added Sucessfully");
            DefaultTableModel tm=(DefaultTableModel)jtab.getModel();
            tm.addRow(new String[]{jTextField1.getText(),jTextField2.getText(),jTextField3.getText()});   
            jTextField1.setText(null);
            jTextField2.setText(null);
            jTextField3.setText(null);
           
            
        } catch (SQLException ex) {
            Logger.getLogger(book.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // SEARCH FOR A BOOK
        try {
            Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sid","sid","sid");
            
            PreparedStatement ps = con.prepareStatement("SELECT * FROM BOOKS WHERE BOOKID=?");
            ps.setString(1, jTextField1.getText());
            ResultSet rs = ps.executeQuery();
            
            DefaultTableModel tm=(DefaultTableModel)jtab.getModel();
            tm.setRowCount(0);
            int i=0;
            
 if(rs.next())
            {   jTextField2.setText(rs.getString(2));
                jTextField3.setText(rs.getString(3));
                jTextField1.setText(rs.getString(1));
                JOptionPane.showMessageDialog(null, "Details FOUND");
                tm.addRow(new String[]{jTextField1.getText(),jTextField2.getText(),jTextField3.getText()});   
            
                try ( 
                        //INSERT INTO HOSTORY
                        Connection con1 = DriverManager.getConnection("jdbc:derby://localhost:1527/sid","sid","sid")) {
                    PreparedStatement ps1 = con1.prepareStatement("INSERT INTO HISTORY (OPERATION,BOOKID,BOOKNAME,DOMAIN) values  (?,?,?,?)");
                    ps1.setString(1,"SEARCHED PERFORMED FOR");
                    ps1.setString(2,rs.getString(1));
                    ps1.setString(3,rs.getString(2));
                    ps1.setString(4,rs.getString(3));
                    ps1.executeUpdate();
                }
            
            }
 
            else{         
                JOptionPane.showMessageDialog(null, "Details not FOUND");
            }
            }
            
         catch (SQLException ex) {
            Logger.getLogger(book.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // UPDATE RECORD
         try {
      
             Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sid","sid","sid");
             PreparedStatement ps = con.prepareStatement("UPDATE BOOKS set BOOKNAME='"+jTextField2.getText()+"',DOMAIN='"+jTextField3.getText()+"' WHERE BOOKID='"+jTextField1.getText()+"'");
            int rs =  ps.executeUpdate();
                          if(rs>=1)
            {
                JOptionPane.showMessageDialog(this,"upadted Successfully");
                DefaultTableModel tm=(DefaultTableModel)jtab.getModel();
                tm.removeRow(0);
                tm.addRow(new String[]{jTextField1.getText(),jTextField2.getText(),jTextField3.getText()});   
                
                //insert into history
            Connection con1 = DriverManager.getConnection("jdbc:derby://localhost:1527/sid","sid","sid");
            PreparedStatement ps1 = con1.prepareStatement("INSERT INTO HISTORY (OPERATION,BOOKID,BOOKNAME,DOMAIN) values  (?,?,?,?)");
            ps1.setString(1,"UPDATED");
            ps1.setString(2,jTextField1.getText());
            ps1.setString(3,jTextField2.getText());
            ps1.setString(4,jTextField3.getText());
            ps1.executeUpdate(); 
            con1.close();
            }
              else{
                  JOptionPane.showConfirmDialog(this,"Not Update !!!!");
              }

        } catch (SQLException ex) {
            Logger.getLogger(book.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // DELETE BOOK RECORD
        try {
            Connection c=DriverManager.getConnection("jdbc:derby://localhost:1527/sid","sid","sid");
            PreparedStatement p=c.prepareStatement("delete from BOOKS where BOOKID='"+jTextField1.getText()+"'  ");
          
            int rs =p.executeUpdate();
            
            if(rs>=1)
            {
                //insert into history
            Connection con1 = DriverManager.getConnection("jdbc:derby://localhost:1527/sid","sid","sid");
            PreparedStatement ps1 = con1.prepareStatement("INSERT INTO HISTORY (OPERATION,BOOKID,BOOKNAME,DOMAIN) values  (?,?,?,?)");
            ps1.setString(1,"DELETED");
            ps1.setString(2,jTextField1.getText());
            ps1.setString(3,jTextField2.getText());
            ps1.setString(4,jTextField3.getText());
            ps1.executeUpdate(); 
            con1.close();
            
            JOptionPane.showMessageDialog(this,"deleted");
                  //delete the row from the table    
            DefaultTableModel tm=(DefaultTableModel)jtab.getModel();
            tm.removeRow(0);
            jTextField1.setText(null);
            jTextField2.setText(null);
            jTextField3.setText(null);
            } 
       }catch (SQLException ex) {
            
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // show all records
         try {
            Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/sid","sid","sid");
            
            PreparedStatement ps = con.prepareStatement("SELECT * FROM BOOKS");
            ResultSet rs = ps.executeQuery();
            
            DefaultTableModel tm=(DefaultTableModel)jtab.getModel();
            tm.setRowCount(0);
            int i=0;
 while(rs.next())
            {  
                i++;
                tm.addRow(new String[]{rs.getString(1),rs.getString(2),rs.getString(3)});   
            }
 
            if(i==0)
            {         
                JOptionPane.showMessageDialog(null, "THE TABLE IS EMPTY");
            }
            }
            
         catch (SQLException ex) {
            Logger.getLogger(book.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // DELETE ALL RECORDS
         try {
            Connection c=DriverManager.getConnection("jdbc:derby://localhost:1527/sid","sid","sid");
            PreparedStatement p=c.prepareStatement("delete from BOOKS");
          
            int rs = p.executeUpdate();
            
            if(rs>=1)
            {
                JOptionPane.showMessageDialog(this,"deleted");
                DefaultTableModel tm=(DefaultTableModel)jtab.getModel();
                tm.setRowCount(0);
            }
         }catch (SQLException ex) {
            
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // REDIRECT TO HISTORY PAGE
        new history().setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(book.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new book().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTable jtab;
    // End of variables declaration//GEN-END:variables
}
